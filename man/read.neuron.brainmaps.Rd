% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brainmaps-api.R
\name{read.neuron.brainmaps}
\alias{read.neuron.brainmaps}
\alias{read.neurons.brainmaps}
\title{Read skeleton(s) from brainmaps API into a \code{nat::neuron} object}
\usage{
read.neuron.brainmaps(x, ...)

read.neurons.brainmaps(x, OmitFailures = NA, df = NULL, ...)
}
\arguments{
\item{x}{A vector of segment ids or any Neuroglancer scene specification that
includes segments ids (see examples and \code{\link{ngl_segments}} for
details).}

\item{...}{Additional arguments passed to \code{\link{brainmaps_skeleton}}
and then on to \code{\link{brainmaps_fetch}}. These may include specifiers
for the brainmaps volume and skeleton collection.}

\item{OmitFailures}{Whether to omit neurons for which \code{FUN} gives an
error. The default value (\code{NA}) will result in nlapply stopping with
an error message the moment there is an error. For other values, see
details.}

\item{df}{Optional data frame containing information about each neuron}
}
\value{
a \code{nat::\link[nat]{neuron}} object
}
\description{
Read skeleton(s) from brainmaps API into a \code{nat::neuron} object
}
\details{
When \code{OmitFailures} is not \code{NA}, \code{FUN} will be
  wrapped in a call to \code{\link{try}} to ensure that failure for any
  single neuron does not abort the \code{\link{nlapply}} call. When
  \code{OmitFailures=TRUE} the resultant \code{\link{neuronlist}} will be
  subsetted down to return values for which \code{FUN} evaluated
  successfully. When \code{OmitFailures=FALSE}, "try-error" objects will be
  left in place. In either of the last 2 cases error messages will not be
  printed because the call is wrapped as \code{try(expr, silent=TRUE)}.

  The optional dataframe (\code{df}) detailing each neuron should have
  \code{rownames} that match the names of each neuron. It would also make
  sense if the same key was present in a column of the data frame. If the
  dataframe contains more rows than neurons, the superfluous rows are dropped
  with a warning. If the dataframe is missing rows for some neurons an error
  is generated. If \code{SortOnUpdate=TRUE} then updating an existing
  \code{\link{neuronlist}} should result in a new \code{\link{neuronlist}}
  with ordering identical to reading all neurons from scratch.
}
\examples{
\dontrun{
n=read.neuron.brainmaps(22427007374)
nm=read.neurons.brainmaps(find_merged_segments(7186840767))
}
}
