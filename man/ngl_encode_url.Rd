% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/urls.R
\name{ngl_encode_url}
\alias{ngl_encode_url}
\title{Encode scene information into a neuroglancer URL}
\usage{
ngl_encode_url(body, baseurl = NULL, auto_unbox = TRUE, ...)
}
\arguments{
\item{body}{A text file or character vector with JSON data or an R list
object}

\item{baseurl}{A URL specifying the neuroglancer server (if missing, uses
\code{options("fafbseg.sampleurl")}). You can use any neuroglancer URL as
will be appropriately truncated if it encodes scene information.}

\item{auto_unbox}{automatically \code{\link[jsonlite]{unbox}} all atomic vectors of length 1. It is usually safer to avoid this and instead use the \code{\link[jsonlite]{unbox}} function to unbox individual elements.
An exception is that objects of class \code{AsIs} (i.e. wrapped in \code{I()}) are not automatically unboxed. This is a way to mark single values as length-1 arrays.}

\item{...}{Additional arguments for \code{\link[jsonlite]{toJSON}}}
}
\value{
Character vector containing encoded URL
}
\description{
Encode scene information into a neuroglancer URL
}
\details{
We take pains to ensure that entries that neuorglancer expects to be
  JSON arrays are (including \code{segments} and \code{hiddenSegments}) are
  always mapped to a JSON array (even when length 1).

  The default baseurl depends on the current segmentation chosen by
  \code{\link{choose_segmentation}}.
}
\examples{
\donttest{
# get sample FlyWire URL
fw_url=with_segmentation('flywire', getOption('fafbseg.sampleurl'))
# only a 0 (dummy) segment id present
ngl_segments(fw_url)
#
fw_sc=ngl_decode_scene(fw_url)
# add a segment
fw_sc$layers[[2]]$segments=union(fw_sc$layers[[2]]$segments,
  "720575940626877799")
# convert back to a URL, nb this depends on choose_segmentation
ngl_encode_url(fw_sc)
\dontrun{
# open in your default browser
browseURL(ngl_encode_url(fw_sc))
}
}

\dontrun{
# copy JSON scene information from {} symbol at top right of neuroglancer
# now make a permanent URL for the scene
ngl_encode_url(clipr::read_clip())
}
}
\seealso{
\code{\link{URLencode}}, \code{\link{open_fafb_ngl}},
  \code{\link[jsonlite]{toJSON}}

Other neuroglancer-urls: 
\code{\link{ngl_decode_scene}()},
\code{\link{open_fafb_ngl}()}
}
\concept{neuroglancer-urls}
