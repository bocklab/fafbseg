% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flywire-api.R
\name{flywire_islatest}
\alias{flywire_islatest}
\title{Check that one or more FlyWire root ids have not been further edited}
\usage{
flywire_islatest(x, cloudvolume.url = NULL, timestamp = NULL, ...)
}
\arguments{
\item{x}{FlyWire rootids in any format understandable to
\code{\link{ngl_segments}} including as \code{integer64}}

\item{cloudvolume.url}{URL for CloudVolume to fetch segmentation image data.
The default value of NULL chooses the flywire production segmentation
dataset.}

\item{timestamp}{(optional) argument to set an endpoint - edits after this
time will be ignored (see details).}

\item{...}{Additional arguments to \code{\link{flywire_fetch}}}
}
\value{
A logical vector of length matching the input
}
\description{
Check that one or more FlyWire root ids have not been further edited
}
\details{
This call is quite fast (think thousands of ids per second). The
  current implementation also de-duplicates the input automatically. You can
  pass in a vector containing duplicates and only the unique ids will be
  passed on to the server.

  If you provide input as \code{integer64} then data will be sent in binary
  form to the flywire server. This can have a significant time saving for
  large queries (think 10000+).

  When a \code{timestamp} is provided, only edits up until that time point
  will be considered. Note that \code{flywire_islatest} will return
  \code{TRUE} in the case of a rootid that was not created until after the
  \code{timestamp}.
}
\examples{
\donttest{
flywire_islatest("720575940621039145")
flywire_islatest(c("720575940619073968", "720575940637707136"))
# check the first id up to a given timestamp, now TRUE
flywire_islatest("720575940619073968", timestamp = "2020-12-01")
}
\dontrun{
latest=flywire_latestid("720575940619073968")
flywire_islatest(latest)

# compare checking roots downstream of two large bilateral neurons
blids=c("720575940619073968", "720575940637707136")
blidsout=flywire_partners(blids)
# 3.2 vs 4.7s in my test
bench::mark(bin=flywire_islatest(blidsout$post_id),
  str=flywire_islatest(as.character(blidsout$post_id)))
}
}
\seealso{
\code{\link{flywire_latestid}}
}
