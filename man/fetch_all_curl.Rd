% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch-all.R
\name{fetch_all_curl}
\alias{fetch_all_curl}
\title{Fetch data specified by a set of curl shell comands (e.g. from Chrome)}
\usage{
fetch_all_curl(x = clipr::read_clip(), outdir = NULL, regex = "^curl",
  filename = "chunk\%05d.raw", ...)
}
\arguments{
\item{x}{Path to a file or character vector of statements (by default it
reads statements from the clipboard)}

\item{outdir}{Optional output directory (will be created if necessary)}

\item{regex}{Optional regular expression that curl statements must match}

\item{filename}{A \code{\link{sprintf}} style format statement that will be
used to name the downloaded files.}

\item{...}{Additional arguments to \code{\link{grep}}}
}
\value{
A named character vector containing the matched URLs named by the
  downloaded files on disk (invisibly)
}
\description{
Fetch data specified by a set of curl shell comands (e.g. from Chrome)
}
\details{
You can generate an appropriate set of commands by opening the
  Chrome Developer console (View ... Developer ... JavaScript Console),
  (re)loading a page of interest, selecting the network tab, selecting a
  downloaded object, right clicking and then choosing (Copy ... Copy all as
  cURL). You should make sure that you only have one neuron displayed if you
  do not want to have to parse the object identifier relationships.
}
\examples{
\dontrun{
fetch_all_curl("all_curl.sh", outdir="alldata",
  regex="brainmaps.googleapis.com", fixed=TRUE)
}
}
\seealso{
\code{\link{read_ng_dump}}
}
